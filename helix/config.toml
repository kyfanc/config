theme = "gruvbox_dark_hard"

[editor]
auto-format = true
bufferline = "multiple"
line-number = "relative"
completion-trigger-len = 1

[editor.file-picker]
hidden = false
git-ignore = false

[editor.statusline]
left = [
  "mode",
  "spacer",
  "version-control",
  "spacer",
  "separator",
  "file-name",
  "file-modification-indicator"
]
right = [
  "spinner",
  "spacer",
  "workspace-diagnostics",
  "separator",
  "spacer",
  "diagnostics",
  "position",
  "file-encoding",
  "file-line-ending",
  "file-type"
]
separator = "╎"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
character = "╎"
render = true

[editor.lsp]
display-messages = true
display-inlay-hints = true

[keys.normal]
C-a = "select_all"
C-k = "copy_selection_on_prev_line"
C-j = "copy_selection_on_next_line"
A-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
A-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
C-h = "jump_view_left"
C-l = "jump_view_right"
C-v = "vsplit"
J = "half_page_down"
K = "half_page_up"
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
"%" = "match_brackets"
y = "yank_to_clipboard"
p = "paste_clipboard_after"
P = "paste_clipboard_before"
R = "replace_selections_with_clipboard"
esc = ["collapse_selection", "keep_primary_selection"]
x = ["yank_to_clipboard", "delete_selection"]
s = "select_regex"
"?" = ["select_all", "search"]

[keys.select]
"$" = "goto_line_end"
"^" = "goto_first_nonwhitespace"
G = "goto_file_end"
"%" = "match_brackets"
x = ["yank_to_clipboard", "delete_selection"]
y = "yank_to_clipboard"
p = "paste_clipboard_after"
P = "paste_clipboard_before"
R = "replace_selections_with_clipboard"
esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]
J = "half_page_down"
K = "half_page_up"
A-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
A-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]

[keys.normal.space]
"[" = "goto_previous_buffer" 
"]" = "goto_next_buffer"
"=" = [":format", "select_all", ":pipe git stripspace"]
E = "workspace_diagnostics_picker"
P = "command_palette"
d = "hover"
e = "diagnostics_picker"
p = "file_picker"
space = "goto_last_accessed_file"

# buffer
[keys.normal.space.b]
"q" = ":buffer-close"
"Q" = ":buffer-close!"
"p" = "buffer_picker"
"space" = "goto_previous_buffer"
"c" = ":buffer-close-all"
"C" = ":buffer-close-all!"
"k" = ":buffer-close-others"
"K" = ":buffer-close-others!"
"[" = ":buffer-previous"
"]" = ":buffer-next"
"r" = ":reload"
"R" = ":reload-all"
"n" = ":new"

# open
[keys.normal.space.o]
"l" = ":open ~/.config/helix/languages.toml"
"c" = ":open ~/.config/helix/config.toml"
"z" = ":open ~/.config/zellij/config.kdl"
"f" = ":open ~/.config/fish/config.fish"

# toggle
[keys.normal.space.t]
"a" = ":toggle auto-completion"
"f" = ":toggle auto-format"
"h" = ":toggle lsp.display-inlay-hints"
"l" = ":toggle lsp.enabled"
"w" = ":toggle soft-wrap.enable"

# llm
[keys.normal.space.m]
"s" = ["yank_to_clipboard", ":sh zellij run --floating -- fish -c 'ollama run mistral \"$(pbpaste | bun run ~/.config/helix/llm.ts --prompt-only --prompt summarizeCode)\" | bat -pp -l md'"]
"d" = ["yank_to_clipboard", ":sh zellij run --floating -- fish -c 'ollama run mistral \"$(pbpaste | bun run ~/.config/helix/llm.ts --prompt-only --prompt diagnoseCode)\" | bat -pp -l md'"]
[keys.select.space.m]
"s" = ["yank_to_clipboard", ":sh zellij run --floating -- fish -c 'ollama run mistral \"$(pbpaste | bun run ~/.config/helix/llm.ts --prompt-only --prompt summarizeCode)\" | bat -pp -l md'"]
"d" = ["yank_to_clipboard", ":sh zellij run --floating -- fish -c 'ollama run mistral \"$(pbpaste | bun run ~/.config/helix/llm.ts --prompt-only --prompt diagnoseCode)\" | bat -pp -l md'"]
