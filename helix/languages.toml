# rust
[[language]]
name = "rust"

[language-server.rust-analyzer.config]
cargo.features = "all"
rust-analyzer.check.command = "clippy"

# python
# pip3 install python-lsp-server[all] python-lsp-ruff black
[[language]]
name = "python"
auto-format = true

# go
# install lsp
# go get golang.org/x/tools/gopls@latest
# go get github.com/go-delve/delve/cmd/dlv@latest
[[language]]
name = "go"
auto-format = true

# helm
# config file type detection and remap to gotmpl
# download https://github.com/helix-editor/helix/blob/d02de7c9fab9bd72ccd3998327d6eb420409277b/runtime/queries/gotmpl/highlights.scm 
# as ~/.config/helix/runtime/helm/hightlights.scm
[language-server.helm_ls]
command = "helm_ls"
args = ["serve"] 

[[language]]
name = "helm"
grammar = "gotmpl"
scope = "source.helm"
injection-regex = "helm"
file-types = ["tpl", "templates/*.tpl"]
roots = ["Chart.yaml"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
language-servers = [ 
  "helm_ls"
]

[[grammar]]
name = "helm"
source = { git = "https://github.com/dannylongeuay/tree-sitter-go-template", rev = "395a33e08e69f4155156f0b90138a6c86764c979" }

# groovy (mainly for Jenkinsfile)
# download https://github.com/helix-editor/helix/blob/d02de7c9fab9bd72ccd3998327d6eb420409277b/runtime/queries/groovy/highlights.scm
# as ~/.config/helix/runtime/groovy/hightlights.scm
[[language]]
name = "groovy"
language-id = "groovy"
scope = "source.groovy"
file-types = ["groovy", "Jenkinsfile", "jenkinsfile"]
shebangs = ["groovy"]
roots = []
comment-token = "//"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "groovy"
source = { git = "https://github.com/Decodetalkers/tree-sitter-groovy", rev = "7e023227f46fee428b16a0288eeb0f65ee2523ec" }

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

